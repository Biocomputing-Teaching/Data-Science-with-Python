Traceback (most recent call last):
  File "/home/jordivilla/miniconda3/lib/python3.11/site-packages/jupyter_cache/executors/utils.py", line 58, in single_nb_execution
    executenb(
  File "/home/jordivilla/miniconda3/lib/python3.11/site-packages/nbclient/client.py", line 1305, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jordivilla/miniconda3/lib/python3.11/site-packages/jupyter_core/utils/__init__.py", line 166, in wrapped
    return loop.run_until_complete(inner)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jordivilla/miniconda3/lib/python3.11/asyncio/base_events.py", line 653, in run_until_complete
    return future.result()
           ^^^^^^^^^^^^^^^
  File "/home/jordivilla/miniconda3/lib/python3.11/site-packages/nbclient/client.py", line 705, in async_execute
    await self.async_execute_cell(
  File "/home/jordivilla/miniconda3/lib/python3.11/site-packages/nbclient/client.py", line 1058, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/home/jordivilla/miniconda3/lib/python3.11/site-packages/nbclient/client.py", line 914, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
import numpy as np
from scipy.ndimage import gaussian_filter
import matplotlib.pyplot as plt

num_centers = 2
sigma = 2
Columns = 25
Rows = 15
size = (x, y)
yticks = range(Rows)
impulses = np.zeros(size)

# rows and cols are the row and column indices of the centers
# of the gaussian peaks.
np.random.seed(123456)
rows, cols = np.unravel_index(np.random.choice(impulses.size, replace=False,
                                               size=num_centers),impulses.shape)
print(rows,cols)
rows, cols = [10,5], [5,21]
impulses[rows, cols] = 1
# or use this if you want duplicates to sum:
#np.add.at(impulses, (rows, cols), 1)

# Filter impulses to create the result.
result = gaussian_filter(impulses, sigma, mode='nearest')
plt.yticks(yticks, yticks[::-1])
plt.imshow(result)
plt.show()
------------------


[0;31m---------------------------------------------------------------------------[0m
[0;31mNameError[0m                                 Traceback (most recent call last)
Cell [0;32mIn[2], line 9[0m
[1;32m      7[0m Columns [38;5;241m=[39m [38;5;241m25[39m
[1;32m      8[0m Rows [38;5;241m=[39m [38;5;241m15[39m
[0;32m----> 9[0m size [38;5;241m=[39m (x, [43my[49m)
[1;32m     10[0m yticks [38;5;241m=[39m [38;5;28mrange[39m(Rows)
[1;32m     11[0m impulses [38;5;241m=[39m np[38;5;241m.[39mzeros(size)

[0;31mNameError[0m: name 'y' is not defined


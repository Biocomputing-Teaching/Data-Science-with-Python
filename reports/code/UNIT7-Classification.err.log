Traceback (most recent call last):
  File "/Users/jordivilla/miniconda3/lib/python3.11/site-packages/jupyter_cache/executors/utils.py", line 58, in single_nb_execution
    executenb(
  File "/Users/jordivilla/miniconda3/lib/python3.11/site-packages/nbclient/client.py", line 1204, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/jordivilla/miniconda3/lib/python3.11/site-packages/nbclient/util.py", line 84, in wrapped
    return just_run(coro(*args, **kwargs))
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/jordivilla/miniconda3/lib/python3.11/site-packages/nbclient/util.py", line 62, in just_run
    return loop.run_until_complete(coro)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/jordivilla/miniconda3/lib/python3.11/asyncio/base_events.py", line 653, in run_until_complete
    return future.result()
           ^^^^^^^^^^^^^^^
  File "/Users/jordivilla/miniconda3/lib/python3.11/site-packages/nbclient/client.py", line 663, in async_execute
    await self.async_execute_cell(
  File "/Users/jordivilla/miniconda3/lib/python3.11/site-packages/nbclient/client.py", line 965, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/Users/jordivilla/miniconda3/lib/python3.11/site-packages/nbclient/client.py", line 862, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
from ucimlrepo import fetch_ucirepo 
  
# fetch dataset 
breast_cancer_wisconsin_diagnostic = fetch_ucirepo(id=17) 
  
# data (as pandas dataframes) 
X = breast_cancer_wisconsin_diagnostic.data.features 
y = breast_cancer_wisconsin_diagnostic.data.targets 
  
# metadata 
print(breast_cancer_wisconsin_diagnostic.metadata) 
  

------------------

[0;31m---------------------------------------------------------------------------[0m
[0;31mSSLCertVerificationError[0m                  Traceback (most recent call last)
File [0;32m~/miniconda3/lib/python3.11/urllib/request.py:1348[0m, in [0;36mAbstractHTTPHandler.do_open[0;34m(self, http_class, req, **http_conn_args)[0m
[1;32m   1347[0m [38;5;28;01mtry[39;00m:
[0;32m-> 1348[0m     h[38;5;241m.[39mrequest(req[38;5;241m.[39mget_method(), req[38;5;241m.[39mselector, req[38;5;241m.[39mdata, headers,
[1;32m   1349[0m               encode_chunked[38;5;241m=[39mreq[38;5;241m.[39mhas_header([38;5;124m'[39m[38;5;124mTransfer-encoding[39m[38;5;124m'[39m))
[1;32m   1350[0m [38;5;28;01mexcept[39;00m [38;5;167;01mOSError[39;00m [38;5;28;01mas[39;00m err: [38;5;66;03m# timeout error[39;00m

File [0;32m~/miniconda3/lib/python3.11/http/client.py:1286[0m, in [0;36mHTTPConnection.request[0;34m(self, method, url, body, headers, encode_chunked)[0m
[1;32m   1285[0m [38;5;250m[39m[38;5;124;03m"""Send a complete request to the server."""[39;00m
[0;32m-> 1286[0m [38;5;28mself[39m[38;5;241m.[39m_send_request(method, url, body, headers, encode_chunked)

File [0;32m~/miniconda3/lib/python3.11/http/client.py:1332[0m, in [0;36mHTTPConnection._send_request[0;34m(self, method, url, body, headers, encode_chunked)[0m
[1;32m   1331[0m     body [38;5;241m=[39m _encode(body, [38;5;124m'[39m[38;5;124mbody[39m[38;5;124m'[39m)
[0;32m-> 1332[0m [38;5;28mself[39m[38;5;241m.[39mendheaders(body, encode_chunked[38;5;241m=[39mencode_chunked)

File [0;32m~/miniconda3/lib/python3.11/http/client.py:1281[0m, in [0;36mHTTPConnection.endheaders[0;34m(self, message_body, encode_chunked)[0m
[1;32m   1280[0m     [38;5;28;01mraise[39;00m CannotSendHeader()
[0;32m-> 1281[0m [38;5;28mself[39m[38;5;241m.[39m_send_output(message_body, encode_chunked[38;5;241m=[39mencode_chunked)

File [0;32m~/miniconda3/lib/python3.11/http/client.py:1041[0m, in [0;36mHTTPConnection._send_output[0;34m(self, message_body, encode_chunked)[0m
[1;32m   1040[0m [38;5;28;01mdel[39;00m [38;5;28mself[39m[38;5;241m.[39m_buffer[:]
[0;32m-> 1041[0m [38;5;28mself[39m[38;5;241m.[39msend(msg)
[1;32m   1043[0m [38;5;28;01mif[39;00m message_body [38;5;129;01mis[39;00m [38;5;129;01mnot[39;00m [38;5;28;01mNone[39;00m:
[1;32m   1044[0m 
[1;32m   1045[0m     [38;5;66;03m# create a consistent interface to message_body[39;00m

File [0;32m~/miniconda3/lib/python3.11/http/client.py:979[0m, in [0;36mHTTPConnection.send[0;34m(self, data)[0m
[1;32m    978[0m [38;5;28;01mif[39;00m [38;5;28mself[39m[38;5;241m.[39mauto_open:
[0;32m--> 979[0m     [38;5;28mself[39m[38;5;241m.[39mconnect()
[1;32m    980[0m [38;5;28;01melse[39;00m:

File [0;32m~/miniconda3/lib/python3.11/http/client.py:1458[0m, in [0;36mHTTPSConnection.connect[0;34m(self)[0m
[1;32m   1456[0m     server_hostname [38;5;241m=[39m [38;5;28mself[39m[38;5;241m.[39mhost
[0;32m-> 1458[0m [38;5;28mself[39m[38;5;241m.[39msock [38;5;241m=[39m [38;5;28mself[39m[38;5;241m.[39m_context[38;5;241m.[39mwrap_socket([38;5;28mself[39m[38;5;241m.[39msock,
[1;32m   1459[0m                                       server_hostname[38;5;241m=[39mserver_hostname)

File [0;32m~/miniconda3/lib/python3.11/ssl.py:517[0m, in [0;36mSSLContext.wrap_socket[0;34m(self, sock, server_side, do_handshake_on_connect, suppress_ragged_eofs, server_hostname, session)[0m
[1;32m    511[0m [38;5;28;01mdef[39;00m [38;5;21mwrap_socket[39m([38;5;28mself[39m, sock, server_side[38;5;241m=[39m[38;5;28;01mFalse[39;00m,
[1;32m    512[0m                 do_handshake_on_connect[38;5;241m=[39m[38;5;28;01mTrue[39;00m,
[1;32m    513[0m                 suppress_ragged_eofs[38;5;241m=[39m[38;5;28;01mTrue[39;00m,
[1;32m    514[0m                 server_hostname[38;5;241m=[39m[38;5;28;01mNone[39;00m, session[38;5;241m=[39m[38;5;28;01mNone[39;00m):
[1;32m    515[0m     [38;5;66;03m# SSLSocket class handles server_hostname encoding before it calls[39;00m
[1;32m    516[0m     [38;5;66;03m# ctx._wrap_socket()[39;00m
[0;32m--> 517[0m     [38;5;28;01mreturn[39;00m [38;5;28mself[39m[38;5;241m.[39msslsocket_class[38;5;241m.[39m_create(
[1;32m    518[0m         sock[38;5;241m=[39msock,
[1;32m    519[0m         server_side[38;5;241m=[39mserver_side,
[1;32m    520[0m         do_handshake_on_connect[38;5;241m=[39mdo_handshake_on_connect,
[1;32m    521[0m         suppress_ragged_eofs[38;5;241m=[39msuppress_ragged_eofs,
[1;32m    522[0m         server_hostname[38;5;241m=[39mserver_hostname,
[1;32m    523[0m         context[38;5;241m=[39m[38;5;28mself[39m,
[1;32m    524[0m         session[38;5;241m=[39msession
[1;32m    525[0m     )

File [0;32m~/miniconda3/lib/python3.11/ssl.py:1108[0m, in [0;36mSSLSocket._create[0;34m(cls, sock, server_side, do_handshake_on_connect, suppress_ragged_eofs, server_hostname, context, session)[0m
[1;32m   1107[0m             [38;5;28;01mraise[39;00m [38;5;167;01mValueError[39;00m([38;5;124m"[39m[38;5;124mdo_handshake_on_connect should not be specified for non-blocking sockets[39m[38;5;124m"[39m)
[0;32m-> 1108[0m         [38;5;28mself[39m[38;5;241m.[39mdo_handshake()
[1;32m   1109[0m [38;5;28;01mexcept[39;00m ([38;5;167;01mOSError[39;00m, [38;5;167;01mValueError[39;00m):

File [0;32m~/miniconda3/lib/python3.11/ssl.py:1379[0m, in [0;36mSSLSocket.do_handshake[0;34m(self, block)[0m
[1;32m   1378[0m         [38;5;28mself[39m[38;5;241m.[39msettimeout([38;5;28;01mNone[39;00m)
[0;32m-> 1379[0m     [38;5;28mself[39m[38;5;241m.[39m_sslobj[38;5;241m.[39mdo_handshake()
[1;32m   1380[0m [38;5;28;01mfinally[39;00m:

[0;31mSSLCertVerificationError[0m: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: certificate has expired (_ssl.c:1006)

During handling of the above exception, another exception occurred:

[0;31mURLError[0m                                  Traceback (most recent call last)
File [0;32m~/miniconda3/lib/python3.11/site-packages/ucimlrepo/fetch.py:66[0m, in [0;36mfetch_ucirepo[0;34m(name, id)[0m
[1;32m     65[0m [38;5;28;01mtry[39;00m:
[0;32m---> 66[0m     response  [38;5;241m=[39m urllib[38;5;241m.[39mrequest[38;5;241m.[39murlopen(api_url)
[1;32m     67[0m     data [38;5;241m=[39m json[38;5;241m.[39mload(response)

File [0;32m~/miniconda3/lib/python3.11/urllib/request.py:216[0m, in [0;36murlopen[0;34m(url, data, timeout, cafile, capath, cadefault, context)[0m
[1;32m    215[0m     opener [38;5;241m=[39m _opener
[0;32m--> 216[0m [38;5;28;01mreturn[39;00m opener[38;5;241m.[39mopen(url, data, timeout)

File [0;32m~/miniconda3/lib/python3.11/urllib/request.py:519[0m, in [0;36mOpenerDirector.open[0;34m(self, fullurl, data, timeout)[0m
[1;32m    518[0m sys[38;5;241m.[39maudit([38;5;124m'[39m[38;5;124murllib.Request[39m[38;5;124m'[39m, req[38;5;241m.[39mfull_url, req[38;5;241m.[39mdata, req[38;5;241m.[39mheaders, req[38;5;241m.[39mget_method())
[0;32m--> 519[0m response [38;5;241m=[39m [38;5;28mself[39m[38;5;241m.[39m_open(req, data)
[1;32m    521[0m [38;5;66;03m# post-process response[39;00m

File [0;32m~/miniconda3/lib/python3.11/urllib/request.py:536[0m, in [0;36mOpenerDirector._open[0;34m(self, req, data)[0m
[1;32m    535[0m protocol [38;5;241m=[39m req[38;5;241m.[39mtype
[0;32m--> 536[0m result [38;5;241m=[39m [38;5;28mself[39m[38;5;241m.[39m_call_chain([38;5;28mself[39m[38;5;241m.[39mhandle_open, protocol, protocol [38;5;241m+[39m
[1;32m    537[0m                           [38;5;124m'[39m[38;5;124m_open[39m[38;5;124m'[39m, req)
[1;32m    538[0m [38;5;28;01mif[39;00m result:

File [0;32m~/miniconda3/lib/python3.11/urllib/request.py:496[0m, in [0;36mOpenerDirector._call_chain[0;34m(self, chain, kind, meth_name, *args)[0m
[1;32m    495[0m func [38;5;241m=[39m [38;5;28mgetattr[39m(handler, meth_name)
[0;32m--> 496[0m result [38;5;241m=[39m func([38;5;241m*[39margs)
[1;32m    497[0m [38;5;28;01mif[39;00m result [38;5;129;01mis[39;00m [38;5;129;01mnot[39;00m [38;5;28;01mNone[39;00m:

File [0;32m~/miniconda3/lib/python3.11/urllib/request.py:1391[0m, in [0;36mHTTPSHandler.https_open[0;34m(self, req)[0m
[1;32m   1390[0m [38;5;28;01mdef[39;00m [38;5;21mhttps_open[39m([38;5;28mself[39m, req):
[0;32m-> 1391[0m     [38;5;28;01mreturn[39;00m [38;5;28mself[39m[38;5;241m.[39mdo_open(http[38;5;241m.[39mclient[38;5;241m.[39mHTTPSConnection, req,
[1;32m   1392[0m         context[38;5;241m=[39m[38;5;28mself[39m[38;5;241m.[39m_context, check_hostname[38;5;241m=[39m[38;5;28mself[39m[38;5;241m.[39m_check_hostname)

File [0;32m~/miniconda3/lib/python3.11/urllib/request.py:1351[0m, in [0;36mAbstractHTTPHandler.do_open[0;34m(self, http_class, req, **http_conn_args)[0m
[1;32m   1350[0m [38;5;28;01mexcept[39;00m [38;5;167;01mOSError[39;00m [38;5;28;01mas[39;00m err: [38;5;66;03m# timeout error[39;00m
[0;32m-> 1351[0m     [38;5;28;01mraise[39;00m URLError(err)
[1;32m   1352[0m r [38;5;241m=[39m h[38;5;241m.[39mgetresponse()

[0;31mURLError[0m: <urlopen error [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: certificate has expired (_ssl.c:1006)>

During handling of the above exception, another exception occurred:

[0;31mConnectionError[0m                           Traceback (most recent call last)
Cell [0;32mIn[9], line 4[0m
[1;32m      1[0m [38;5;28;01mfrom[39;00m [38;5;21;01mucimlrepo[39;00m [38;5;28;01mimport[39;00m fetch_ucirepo 
[1;32m      3[0m [38;5;66;03m# fetch dataset [39;00m
[0;32m----> 4[0m breast_cancer_wisconsin_diagnostic [38;5;241m=[39m fetch_ucirepo([38;5;28mid[39m[38;5;241m=[39m[38;5;241m17[39m) 
[1;32m      6[0m [38;5;66;03m# data (as pandas dataframes) [39;00m
[1;32m      7[0m X [38;5;241m=[39m breast_cancer_wisconsin_diagnostic[38;5;241m.[39mdata[38;5;241m.[39mfeatures 

File [0;32m~/miniconda3/lib/python3.11/site-packages/ucimlrepo/fetch.py:69[0m, in [0;36mfetch_ucirepo[0;34m(name, id)[0m
[1;32m     67[0m     data [38;5;241m=[39m json[38;5;241m.[39mload(response)
[1;32m     68[0m [38;5;28;01mexcept[39;00m (urllib[38;5;241m.[39merror[38;5;241m.[39mURLError, urllib[38;5;241m.[39merror[38;5;241m.[39mHTTPError):
[0;32m---> 69[0m     [38;5;28;01mraise[39;00m [38;5;167;01mConnectionError[39;00m([38;5;124m'[39m[38;5;124mError connecting to server[39m[38;5;124m'[39m)
[1;32m     71[0m [38;5;66;03m# verify that dataset exists [39;00m
[1;32m     72[0m [38;5;28;01mif[39;00m data[[38;5;124m'[39m[38;5;124mstatus[39m[38;5;124m'[39m] [38;5;241m!=[39m [38;5;241m200[39m:

[0;31mConnectionError[0m: Error connecting to server
ConnectionError: Error connecting to server

